
@{
    ViewData["Title"] = "Home Page";
    string hasPreviousPage = Model.PageViewModel.HasPreviousPage ? "" : "disabled";
    string hasNextPage = Model.PageViewModel.HasNextPage ? "" : "disabled";
}

@await Html.PartialAsync("_ProductCarousel", new IndexViewModel() { Models = Model.Models, PageViewModel = Model.PageViewModel, ProjectSettings = Model.ProjectSettings })
<section class="section-products">
    <div class="container">
        <div class="row">
            @foreach (ProductModel pm in Model.Models)
            {
                await Html.RenderPartialAsync("_ProductCard", new ProductCardModel() { Product = @pm, ProjectSettings = @Model.ProjectSettings });
            }
        </div>
    </div>
</section>

<a asp-action="Index"
   asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
   class="btn btn-outline-dark @hasPreviousPage">
    <i class="glyphicon glyphicon-chevron-left"></i>
    Previous
</a>

<a asp-action="Index"
   asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
   class="btn btn-outline-dark @hasNextPage">
    Next
    <i class="glyphicon glyphicon-chevron-right"></i>
</a>

